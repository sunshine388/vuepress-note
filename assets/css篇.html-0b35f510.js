import{_ as p,W as e,X as l,Y as i,Z as n,a0 as a,a1 as t,$ as o,C as c}from"./framework-d2dfa12e.js";const r={},u=n("p",null,"css 相关面试题",-1),d={href:"https://segmentfault.com/a/1190000013325778",target:"_blank",rel:"noopener noreferrer"},k={href:"https://segmentfault.com/a/1190000013860482",target:"_blank",rel:"noopener noreferrer"},v=o(`<h2 id="css-优先级是怎么计算的" tabindex="-1"><a class="header-anchor" href="#css-优先级是怎么计算的" aria-hidden="true">#</a> css 优先级是怎么计算的</h2><ul><li>第一优先级：!important 会覆盖页面内任何位置的元素样式</li><li>内联样式，如 style=&quot;color: green&quot;，权值为 1000</li><li>ID 选择器，如#app，权值为 0100</li><li>类、伪类、属性选择器，如.foo, :first-child, div[class=&quot;foo&quot;]，权值为 0010</li><li>标签、伪元素选择器，如 div::first-line，权值为 0001</li><li>通配符、子类选择器、兄弟选择器，如*, &gt;, +，权值为 0000</li><li>继承的样式没有权值</li></ul><h2 id="css-不同选择器的权重-css-层叠的规则" tabindex="-1"><a class="header-anchor" href="#css-不同选择器的权重-css-层叠的规则" aria-hidden="true">#</a> CSS 不同选择器的权重(CSS 层叠的规则)</h2><ul><li>!important 规则最重要，大于其它规则</li><li>行内样式规则，加 1000</li><li>对于选择器中给定的各个 ID 属性值，加 100</li><li>对于选择器中给定的各个类属性、属性选择器或者伪类选择器，加 10</li><li>对于选择其中给定的各个元素标签选择器，加 1</li><li>如果权值一样，则按照样式规则的先后顺序来应用，顺序靠后的覆盖靠前的规则</li></ul><h2 id="css-优先级算法如何计算" tabindex="-1"><a class="header-anchor" href="#css-优先级算法如何计算" aria-hidden="true">#</a> CSS 优先级算法如何计算？</h2><ul><li>优先级就近原则，同权重情况下样式定义最近者为准</li><li>载入样式以最后载入的定位为准</li><li>优先级为: !important &gt; id &gt; class &gt; tag ; !important 比 内联优先级高</li></ul><h2 id="css-sprite-是什么-有什么优缺点" tabindex="-1"><a class="header-anchor" href="#css-sprite-是什么-有什么优缺点" aria-hidden="true">#</a> css sprite 是什么,有什么优缺点</h2><ul><li>概念：将多个小图片拼接到一个图片中。通过 background-position 和元素尺寸调节需要显示的背景图案。</li><li>优点： <ul><li>减少 HTTP 请求数，极大地提高页面加载速度</li><li>增加图片信息重复度，提高压缩比，减少图片大小</li><li>更换风格方便，只需在一张或几张图片上修改颜色或样式即可实现</li></ul></li><li>缺点： <ul><li>图片合并麻烦</li><li>维护麻烦，修改一个图片可能需要从新布局整个图片，样式</li></ul></li></ul><h2 id="display-none-与-visibility-hidden-的区别" tabindex="-1"><a class="header-anchor" href="#display-none-与-visibility-hidden-的区别" aria-hidden="true">#</a> display: none; 与 visibility: hidden; 的区别</h2><p>联系：它们都能让元素不可见 区别：</p><ul><li>display:none ;会让元素完全从渲染树中消失，渲染的时候不占据任何空间；visibility: hidden ;不会让元素从渲染树消失，渲染师元素继续占据空间，只是内容不可见</li><li>display: none ;是非继承属性，子孙节点消失由于元素从渲染树消失造成，通过修改子孙节点属性无法显示 ；visibility: hidden; 是继承属性，子孙节点消失由于继承了 hidden，通过设置 visibility: visible; 可以让子孙节点显式</li><li>修改常规流中元素的 display 通常会造成文档重排。修改 visibility 属性只会造成本元素的重绘。</li><li>读屏器不会读取 display: none ;元素内容；会读取 visibility: hidden; 元素内容</li></ul><h2 id="link-与-import-的区别" tabindex="-1"><a class="header-anchor" href="#link-与-import-的区别" aria-hidden="true">#</a> link 与 @import 的区别</h2><ol><li>link 是 HTML 方式， @import 是 CSS 方式</li><li>link 最大限度支持并行下载， @import 过多嵌套导致串行下载，出现 FOUC (文档样式短暂失效)</li><li>link 可以通过 rel=&quot;alternate stylesheet&quot; 指定候选样式</li><li>浏览器对 link 支持早于 @import ，可以使用 @import 对老浏览器隐藏样式</li><li><template></template></li><li>总体来说： link 优于 @import</li></ol><h2 id="什么是-fouc-如何避免" tabindex="-1"><a class="header-anchor" href="#什么是-fouc-如何避免" aria-hidden="true">#</a> 什么是 FOUC?如何避免</h2><ul><li>Flash Of Unstyled Content ：用户定义样式表加载之前浏览器使用默认样式显示文档，用户样式加载渲染之后再从新显示文档，造成页面闪烁。</li><li>解决方法：把样式表放到文档的 &lt;head&gt;</li></ul><h2 id="display、float、position-的关系" tabindex="-1"><a class="header-anchor" href="#display、float、position-的关系" aria-hidden="true">#</a> display、float、position 的关系</h2><ul><li>如果 display 取值为 none ，那么 position 和 float 都不起作用，这种情况下元素不产生框</li><li>否则，如果 position 取值为 absolute 或者 fixed ，框就是绝对定位的， float 的计算值为 none ， display 根据下面的表格进行调整。</li><li>否则，如果 float 不是 none ，框是浮动的， display 根据下表进行调整</li><li>否则，如果元素是根元素， display 根据下表进行调整</li><li>其他情况下 display 的值为指定值</li><li>总结起来：绝对定位、浮动、根元素都需要调整 display</li></ul><h2 id="清除浮动的几种方式-各自的优缺点" tabindex="-1"><a class="header-anchor" href="#清除浮动的几种方式-各自的优缺点" aria-hidden="true">#</a> 清除浮动的几种方式，各自的优缺点</h2><ul><li>父级 div 定义 height</li><li>结尾处加空 div 标签 clear:both</li><li>父级 div 定义伪类 :after 和 zoom</li><li>父级 div 定义 overflow:hidden</li><li>父级 div 也浮动，需要定义宽度</li><li>结尾处加 br 标签 clear:both</li></ul><p>比较好的是第 3 种方式，好多网站都这么用</p><h2 id="谈谈浮动和清除浮动" tabindex="-1"><a class="header-anchor" href="#谈谈浮动和清除浮动" aria-hidden="true">#</a> 谈谈浮动和清除浮动</h2><p>浮动的框可以向左或向右移动，直到他的外边缘碰到包含框或另一个浮动框的边框为止。由于浮动框不在文档的普通流中，所以文档的普通流的块框表现得就像浮动框不存在一样。浮动的块框会漂浮在文档普通流的块框上</p><p>浮动带来的问题：</p><ol><li>父元素的高度无法被撑开，影响与父元素同级的元素</li><li>与浮动元素同级的非浮动元素（内联元素）会跟随其后</li><li>若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构。</li></ol><h2 id="为什么要初始化-css-样式" tabindex="-1"><a class="header-anchor" href="#为什么要初始化-css-样式" aria-hidden="true">#</a> 为什么要初始化 CSS 样式</h2><ul><li>因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对 CSS 初始化往往会出现浏览器之间的页面显示差异。</li><li>当然，初始化样式会对 SEO 有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化</li></ul><h2 id="css3-有哪些新特性" tabindex="-1"><a class="header-anchor" href="#css3-有哪些新特性" aria-hidden="true">#</a> css3 有哪些新特性</h2><ul><li>新增各种 css 选择器</li><li>圆角 border-radius</li><li>多列布局</li><li>阴影和反射</li><li>文字特效 text-shadow</li><li>线性渐变</li><li>旋转 transform</li></ul><h2 id="css3-新增伪类有那些" tabindex="-1"><a class="header-anchor" href="#css3-新增伪类有那些" aria-hidden="true">#</a> CSS3 新增伪类有那些？</h2><ul><li>p:first-of-type 选择属于其父元素的首个 &lt;p&gt; 元素的每个 &lt;p&gt; 元素</li><li>p:last-of-type 选择属于其父元素的最后 &lt;p&gt; 元素的每个 &lt;p&gt;元素。</li><li>p:only-of-type 选择属于其父元素唯一的&lt;p&gt;元素的每个 &lt;p&gt;元素。</li><li>p:only-child 选择属于其父元素的唯一子元素的每个 &lt;p&gt;元素。</li><li>p:nth-child(2) 选择属于其父元素的第二个子元素的每个&lt;p&gt;元素。</li><li>:after 在元素之前添加内容,也可以用来做清除浮动。</li><li>:before 在元素之后添加内容。</li><li>:enabled 已启用的表单元素。</li><li>:disabled 已禁用的表单元素。</li><li>:checked 单选框或复选框被选中。</li></ul><h2 id="display-有哪些值-说明他们的作用" tabindex="-1"><a class="header-anchor" href="#display-有哪些值-说明他们的作用" aria-hidden="true">#</a> display 有哪些值？说明他们的作用</h2><ul><li>block 转换成块状元素。</li><li>inline 转换成行内元素。</li><li>none 设置元素不可见。</li><li>inline-block 象行内元素一样显示，但其内容象块类型元素一样显示。</li><li>list-item 象块类型元素一样显示，并添加样式列表标记。</li><li>table 此元素会作为块级表格来显示</li><li>inherit 规定应该从父元素继承 display 属性的值</li></ul><h2 id="position-的值-relative-和-absolute-定位原点是" tabindex="-1"><a class="header-anchor" href="#position-的值-relative-和-absolute-定位原点是" aria-hidden="true">#</a> position 的值， relative 和 absolute 定位原点是</h2><ul><li>absolute ：生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位</li><li>fixed ：生成绝对定位的元素，相对于浏览器窗口进行定位</li><li>relative ：生成相对定位的元素，相对于其正常位置进行定位</li><li>static 默认值。没有定位，元素出现在正常的流中</li><li>inherit 规定从父元素继承 position 属性的值</li></ul><h2 id="display-inline-block-什么时候不会显示间隙" tabindex="-1"><a class="header-anchor" href="#display-inline-block-什么时候不会显示间隙" aria-hidden="true">#</a> display:inline-block 什么时候不会显示间隙？</h2><ul><li>移除空格</li><li>使用 margin 负值</li><li>使用 font-size:0</li><li>letter-spacing</li><li>word-spacing</li></ul><h2 id="png-gif-jpg-的区别及如何选" tabindex="-1"><a class="header-anchor" href="#png-gif-jpg-的区别及如何选" aria-hidden="true">#</a> PNG\\GIF\\JPG 的区别及如何选</h2><p>GIF</p><ul><li>8 位像素， 256 色</li><li>无损压缩</li><li>支持简单动画</li><li>支持 boolean 透明</li><li>适合简单动画</li></ul><p>JPEG</p><ul><li>颜色限于 256</li><li>有损压缩</li><li>可控制压缩质量</li><li>不支持透明</li><li>适合照片</li></ul><p>PNG</p><ul><li>有 PNG8 和 truecolor PNG</li><li>PNG8 类似 GIF 颜色上限为 256 ，文件小，支持 alpha 透明度，无动画</li><li>适合图标、背景、按钮</li></ul><h2 id="行内元素-float-left-后是否变为块级元素" tabindex="-1"><a class="header-anchor" href="#行内元素-float-left-后是否变为块级元素" aria-hidden="true">#</a> 行内元素 float:left 后是否变为块级元素？</h2><p>行内元素设置成浮动之后变得更加像是 inline-block （行内块级元素，设置成这个属性的元素会同时拥有行内和块级的特性，最明显的不同是它的默认宽度不是 100% ），这时候给行内元素设置 padding-top 和 padding-bottom 或者 width 、 height 都是有效果的</p><h2 id="在网页中的应该使用奇数还是偶数的字体-为什么呢" tabindex="-1"><a class="header-anchor" href="#在网页中的应该使用奇数还是偶数的字体-为什么呢" aria-hidden="true">#</a> 在网页中的应该使用奇数还是偶数的字体？为什么呢？</h2><p>偶数字号相对更容易和 web 设计的其他部分构成比例关系</p><h2 id="before-和-after-中双冒号和单冒号-有什么区别-解释一下这-2-个伪元素的作用" tabindex="-1"><a class="header-anchor" href="#before-和-after-中双冒号和单冒号-有什么区别-解释一下这-2-个伪元素的作用" aria-hidden="true">#</a> ::before 和 :after 中双冒号和单冒号 有什么区别？解释一下这 2 个伪元素的作用</h2><ul><li>单冒号( : )用于 CSS3 伪类，双冒号( :: )用于 CSS3 伪元素</li><li>用于区分伪类和伪元素</li></ul><h2 id="伪类和伪元素的区别" tabindex="-1"><a class="header-anchor" href="#伪类和伪元素的区别" aria-hidden="true">#</a> 伪类和伪元素的区别</h2><ul><li>伪类表状态</li><li>伪元素是真的有元素</li><li>前者单冒号，后者双冒号</li></ul><h2 id="如果需要手动写动画-你认为最小时间间隔是多久-为什么" tabindex="-1"><a class="header-anchor" href="#如果需要手动写动画-你认为最小时间间隔是多久-为什么" aria-hidden="true">#</a> 如果需要手动写动画，你认为最小时间间隔是多久，为什么？</h2><p>多数显示器默认频率是 60Hz ，即 1 秒刷新 60 次，所以理论上最小间隔为 1/60*1000ms ＝ 16.7ms</p><h2 id="css-合并方法" tabindex="-1"><a class="header-anchor" href="#css-合并方法" aria-hidden="true">#</a> CSS 合并方法</h2><p>避免使用 @import 引入多个 css 文件，可以使用 CSS 工具将 CSS 合并为一个 CSS 文件，例如使用 Sass\\Compass 等</p><h2 id="列出你所知道可以改变页面布局的属性" tabindex="-1"><a class="header-anchor" href="#列出你所知道可以改变页面布局的属性" aria-hidden="true">#</a> 列出你所知道可以改变页面布局的属性</h2><p>position 、 display 、 float 、 width 、 height 、 margin 、 padding 、 top 、left 、 right 、\`</p><h2 id="css-在性能优化方面的实践" tabindex="-1"><a class="header-anchor" href="#css-在性能优化方面的实践" aria-hidden="true">#</a> CSS 在性能优化方面的实践</h2><ul><li>css 压缩与合并、 Gzip 压缩</li><li>css 文件放在 head 里、不要用 @import</li><li>尽量用缩写、避免用滤镜、合理使用选择器</li></ul><h2 id="css3-动画-简单动画的实现-如旋转等" tabindex="-1"><a class="header-anchor" href="#css3-动画-简单动画的实现-如旋转等" aria-hidden="true">#</a> CSS3 动画（简单动画的实现，如旋转等）</h2><ul><li>依靠 CSS3 中提出的三个属性： transition 、 transform 、 animation</li><li>transition ：定义了元素在变化过程中是怎么样的，包含 transition-property 、transition-duration 、 transition-timing-function 、 transition-delay 。</li><li>transform ：定义元素的变化结果，包含 rotate 、 scale 、 skew 、 translate 。</li><li>animation ：动画定义了动作的每一帧（ @keyframes ）有什么效果，包括 animation-name ， animation-duration 、 animation-timing-function 、 animation-delay 、animation-iteration-count 、 animation-direction</li></ul><h2 id="说一说-css3-的-animation" tabindex="-1"><a class="header-anchor" href="#说一说-css3-的-animation" aria-hidden="true">#</a> 说一说 css3 的 animation</h2><ul><li>css3 的 animation 是 css3 新增的动画属性，这个 css3 动画的每一帧是通过 @keyframes 来声明的， keyframes 声明了动画的名称，通过 from 、 to 或者是百分比来定义每一帧动画元素的状态，通过 animation-name 来引用这个动画，同时 css3 动画也可以定义动画运行的时长、动画开始时间、动画播放方向、动画循环次数、动画播放的方式，</li><li>这些相关的动画子属性有： <ul><li>animation-name 定义动画名；</li><li>animation-duration 定义动画播放的时长；</li><li>animation-delay 定义动画延迟播放的时间；</li><li>animation-direction 定义动画的播放方向；</li><li>animation-iteration-count 定义播放次数；</li><li>animation-fill-mode 定义动画播放之后的状态；</li><li>animation-play-state 定义播放状态，如暂停运行等；</li><li>animation-timing-function 定义播放的方式，如恒速播放、艰涩播放等。</li></ul></li></ul><h2 id="base64-的原理及优缺点" tabindex="-1"><a class="header-anchor" href="#base64-的原理及优缺点" aria-hidden="true">#</a> base64 的原理及优缺点</h2><p>优点可以加密，减少了 HTTTP 请求 缺点是需要消耗 CPU 进行编解码</p><h2 id="base64-的使用" tabindex="-1"><a class="header-anchor" href="#base64-的使用" aria-hidden="true">#</a> base64 的使用</h2><ul><li>用于减少 HTTP 请求</li><li>适用于小图片</li><li>base64 的体积约为原图的 4/3</li></ul><h2 id="stylus-sass-less-区别" tabindex="-1"><a class="header-anchor" href="#stylus-sass-less-区别" aria-hidden="true">#</a> stylus/sass/less 区别</h2><ul><li>均具有“变量”、“混合”、“嵌套”、“继承”、“颜色混合”五大基本特性</li><li>Scss 和 LESS 语法较为严谨， LESS 要求一定要使用大括号“{}”， Scss 和 Stylus 可以通过缩进表示层次与嵌套关系</li><li>Scss 无全局变量的概念， LESS 和 Stylus 有类似于其它语言的作用域概念</li><li>Sass 是基于 Ruby 语言的，而 LESS 和 Stylus 可以基于 NodeJS NPM 下载相应库后进行编译；</li></ul><h2 id="sass、less-是什么-大家为什么要使用他们" tabindex="-1"><a class="header-anchor" href="#sass、less-是什么-大家为什么要使用他们" aria-hidden="true">#</a> Sass、LESS 是什么？大家为什么要使用他们</h2><ul><li>他们是 CSS 预处理器。他是 CSS 上的一种抽象层。他们是一种特殊的语法/语言编译成 CSS 。</li><li>例如 Less 是一种动态样式语言. 将 CSS 赋予了动态语言的特性，如变量，继承，运算， 函数。LESS 既可以在客户端上运行 (支持 IE 6+ , Webkit , Firefox )，也可一在服务端运行(借助 Node.js )</li></ul><p>为什么要使用它们？</p><ul><li>结构清晰，便于扩展。</li><li>可以方便地屏蔽浏览器私有语法差异。这个不用多说，封装对浏览器语法差异的重复处理，减少无意义的机械劳动。</li><li>可以轻松实现多重继承。</li><li>完全兼容 CSS 代码，可以方便地应用到老项目中。LESS 只- 是在 CSS 语法上做了扩展，所以老的 CSS 代码也可以与 LESS 代码一同编译</li></ul><h2 id="postcss-的作用" tabindex="-1"><a class="header-anchor" href="#postcss-的作用" aria-hidden="true">#</a> postcss 的作用</h2><ul><li>可以直观的理解为：它就是一个平台。为什么说它是一个平台呢？因为我们直接用它，感觉不能干什么事情，但是如果让一些插件在它上面跑，那么将会很强大</li><li>PostCSS 提供了一个解析器，它能够将 CSS 解析成抽象语法树</li><li>通过在 PostCSS 这个平台上，我们能够开发一些插件，来处理我们的 CSS ，比如热门的： autoprefixer</li><li>postcss 可以对 sass 处理过后的 css 再处理 最常见的就是 autoprefixer</li></ul><h2 id="自定义字体的使用场景" tabindex="-1"><a class="header-anchor" href="#自定义字体的使用场景" aria-hidden="true">#</a> 自定义字体的使用场景</h2><p>宣传/品牌/ banner 等固定文案、字体图标</p><h2 id="如何美化-checkbox" tabindex="-1"><a class="header-anchor" href="#如何美化-checkbox" aria-hidden="true">#</a> 如何美化 CheckBox</h2><ul><li>&lt;label&gt; 属性 for 和 id</li><li>隐藏原生的 &lt;input&gt;</li><li>:checked + &lt;label&gt;</li></ul><h2 id="请用-css-写一个简单的幻灯片效果页面" tabindex="-1"><a class="header-anchor" href="#请用-css-写一个简单的幻灯片效果页面" aria-hidden="true">#</a> 请用 CSS 写一个简单的幻灯片效果页面</h2><p>使用 animation 动画实现一个简单的幻灯片效果</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span>ani<span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 480px<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 320px<span class="token punctuation">;</span>
  <span class="token literal-property property">margin</span><span class="token operator">:</span> 50px auto<span class="token punctuation">;</span>
  <span class="token literal-property property">overflow</span><span class="token operator">:</span> hidden<span class="token punctuation">;</span>
  box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">0</span> 5px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  background<span class="token operator">-</span>size<span class="token operator">:</span> cover<span class="token punctuation">;</span>
  background<span class="token operator">-</span>position<span class="token operator">:</span> center<span class="token punctuation">;</span>
  <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>name<span class="token operator">:</span> <span class="token string">&quot;loops&quot;</span><span class="token punctuation">;</span><span class="token comment">//动画名称</span>
  <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>duration<span class="token operator">:</span> 10s<span class="token punctuation">;</span>
  <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>iteration<span class="token operator">-</span>count<span class="token operator">:</span> infinite<span class="token punctuation">;</span><span class="token comment">//动画无限次播放</span>
<span class="token punctuation">}</span>
@<span class="token operator">-</span>webkit<span class="token operator">-</span>keyframes <span class="token string">&quot;loops&quot;</span> <span class="token punctuation">{</span>
  <span class="token number">0</span><span class="token operator">%</span> <span class="token punctuation">{</span>
    background<span class="token operator">-</span>color<span class="token operator">:</span> black<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token number">25</span><span class="token operator">%</span> <span class="token punctuation">{</span>
    background<span class="token operator">-</span>color<span class="token operator">:</span> red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token number">50</span><span class="token operator">%</span> <span class="token punctuation">{</span>
    background<span class="token operator">-</span>color<span class="token operator">:</span> pink<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token number">75</span><span class="token operator">%</span> <span class="token punctuation">{</span>
    background<span class="token operator">-</span>color<span class="token operator">:</span> blue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">{</span>
    background<span class="token operator">-</span>color<span class="token operator">:</span> yellow<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="什么是外边距重叠-重叠的结果是什么" tabindex="-1"><a class="header-anchor" href="#什么是外边距重叠-重叠的结果是什么" aria-hidden="true">#</a> 什么是外边距重叠？重叠的结果是什么？</h2><p>外边距重叠就是 margin-collapse</p><ul><li>在 CSS 当中，相邻的两个盒子（可能是兄弟关系也可能是祖先关系）的外边距可以结合成一个单独的外边距。这种合并外边距的方式被称为折叠，并且因而所结合成的外边距称为折叠外边距。</li></ul><p>折叠结果遵循下列计算规则：</p><ul><li>两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。</li><li>两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。</li><li>两个外边距一正一负时，折叠结果是两者的相加的和。</li></ul><h2 id="rgba-和-opacity-的透明效果有什么不同" tabindex="-1"><a class="header-anchor" href="#rgba-和-opacity-的透明效果有什么不同" aria-hidden="true">#</a> rgba()和 opacity 的透明效果有什么不同</h2><ul><li>rgba() 和 opacity 都能实现透明效果，但最大的不同是 opacity 作用于元素，以及元素内的所有内容的透明度，</li><li>而 rgba() 只作用于元素的颜色或其背景色。（设置 rgba 透明的元素的子元素不会继承透明效果！）</li></ul><h2 id="css-中可以让文字在垂直和水平方向上重叠的两个属性是什么" tabindex="-1"><a class="header-anchor" href="#css-中可以让文字在垂直和水平方向上重叠的两个属性是什么" aria-hidden="true">#</a> css 中可以让文字在垂直和水平方向上重叠的两个属性是什么</h2><p>垂直方向： line-height 水平方向： letter-spacing</p><h2 id="如何垂直居中一个浮动元素" tabindex="-1"><a class="header-anchor" href="#如何垂直居中一个浮动元素" aria-hidden="true">#</a> 如何垂直居中一个浮动元素</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//方法一：已知元素的高宽</span>
#div1<span class="token punctuation">{</span>
  background<span class="token operator">-</span>color<span class="token operator">:</span>#6699FF<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span>200px<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span>200px<span class="token punctuation">;</span>
  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span> <span class="token comment">//父元素需要相对定位</span>
  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>
  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>
  margin<span class="token operator">-</span>top<span class="token operator">:</span><span class="token operator">-</span>100px <span class="token punctuation">;</span> <span class="token comment">//二分之一的height，width</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>100px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//方法二:</span>
#div1<span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  background<span class="token operator">-</span>color<span class="token operator">:</span> #6699FF<span class="token punctuation">;</span>
  <span class="token literal-property property">margin</span><span class="token operator">:</span>auto<span class="token punctuation">;</span>
  <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span> <span class="token comment">//父元素需要相对定位</span>
  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">bottom</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何垂直居中一个-img-用更简便的方法。" tabindex="-1"><a class="header-anchor" href="#如何垂直居中一个-img-用更简便的方法。" aria-hidden="true">#</a> 如何垂直居中一个 &lt;img&gt; ?（用更简便的方法。）</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>#container <span class="token comment">//&lt;img&gt;的容器设置如下</span>
<span class="token punctuation">{</span>
 <span class="token literal-property property">display</span><span class="token operator">:</span>table<span class="token operator">-</span>cell<span class="token punctuation">;</span>
 text<span class="token operator">-</span>align<span class="token operator">:</span>center<span class="token punctuation">;</span>
 vertical<span class="token operator">-</span>align<span class="token operator">:</span>middle<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="px-和-em-的区别" tabindex="-1"><a class="header-anchor" href="#px-和-em-的区别" aria-hidden="true">#</a> px 和 em 的区别</h2><ul><li>px 和 em 都是长度单位，区别是， px 的值是固定的，指定是多少就是多少，计算比较容易。 em 的值不是固定的，并且 em 会继承父级元素的字体大小。</li><li>浏览器的默认字体高都是 16px 。所以未经调整的浏览器都符合: 1em=16px 。那么 12px=0.75em , 10px=0.625em</li></ul><h2 id="知道-css-有个-content-属性吗-有什么作用-有什么应用" tabindex="-1"><a class="header-anchor" href="#知道-css-有个-content-属性吗-有什么作用-有什么应用" aria-hidden="true">#</a> 知道 css 有个 content 属性吗？有什么作用？有什么应用？</h2><p>css 的 content 属性专门应用在 before/after 伪元素上，用于来插入生成内容。最常见的应用是利用伪类清除浮动。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//一种常见利用伪类清除浮动的代码</span>
<span class="token punctuation">.</span>clearfix<span class="token operator">:</span>after <span class="token punctuation">{</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">;</span> <span class="token comment">//这里利用到了content属性</span>
  <span class="token literal-property property">display</span><span class="token operator">:</span>block<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">visibility</span><span class="token operator">:</span>hidden<span class="token punctuation">;</span>
  <span class="token literal-property property">clear</span><span class="token operator">:</span>both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>clearfix <span class="token punctuation">{</span>
  <span class="token operator">*</span>zoom<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何使用-css-实现硬件加速" tabindex="-1"><a class="header-anchor" href="#如何使用-css-实现硬件加速" aria-hidden="true">#</a> 如何使用 CSS 实现硬件加速？</h2><blockquote><p>硬件加速是指通过创建独立的复合图层，让 GPU 来渲染这个图层，从而提高性能，</p></blockquote><ul><li>一般触发硬件加速的 CSS 属性有 transform 、 opacity 、 filter ，为了避免 2D 动画在开始和结束的时候的 repaint 操作，一般使用 tranform:translateZ(0)</li></ul><h2 id="重绘和回流-重排-是什么-如何避免" tabindex="-1"><a class="header-anchor" href="#重绘和回流-重排-是什么-如何避免" aria-hidden="true">#</a> 重绘和回流（重排）是什么，如何避免</h2><ul><li>DOM 的变化影响到了元素的几何属性（宽高），浏览器重新计算元素的几何属性，其他元素的几何属性和位置也会受到影响，浏览器需要重新构造渲染树，这个过程称为重排，浏览器将受到影响的部分重新绘制到屏幕上的过程称为重绘。</li></ul><p>引起重排的原因有</p><ul><li>添加或者删除可见的 DOM 元素，</li><li>元素位置、尺寸、内容改变，</li><li>浏览器页面初始化，</li><li>浏览器窗口尺寸改变，重排一定重绘，重绘不一定重排，</li></ul><p>减少重绘和重排的方法：</p><ul><li>不在布局信息改变时做 DOM 查询</li><li>使用 cssText 或者 className 一次性改变属性</li><li>使用 fragment</li><li>对于多次重排的元素，如动画，使用绝对定位脱离文档流，让他的改变不影响到其他元素</li></ul><h2 id="几种常见的-css-布局" tabindex="-1"><a class="header-anchor" href="#几种常见的-css-布局" aria-hidden="true">#</a> 几种常见的 CSS 布局</h2><p>流体布局</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;container&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;left&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;right&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;main&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> right<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>main <span class="token punctuation">{</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> 120px<span class="token punctuation">;</span>
  margin<span class="token operator">-</span>right<span class="token operator">:</span> 220px<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>圣杯布局</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;container&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;left&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;right&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;main&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token punctuation">.</span>container <span class="token punctuation">{</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> 120px<span class="token punctuation">;</span>
  margin<span class="token operator">-</span>right<span class="token operator">:</span> 220px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>main <span class="token punctuation">{</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 300px<span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span>
  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token operator">-</span>120px<span class="token punctuation">;</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 300px<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span>
  <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token operator">-</span>220px<span class="token punctuation">;</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> right<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 300px<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>200px<span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>双飞翼布局</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;content&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;main&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;left&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;right&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token punctuation">.</span>content <span class="token punctuation">{</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>main <span class="token punctuation">{</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> 110px<span class="token punctuation">;</span>
  margin<span class="token operator">-</span>right<span class="token operator">:</span> 220px<span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>main<span class="token operator">:</span><span class="token operator">:</span>after <span class="token punctuation">{</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">display</span><span class="token operator">:</span> block<span class="token punctuation">;</span>
  font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">zoom</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token literal-property property">clear</span><span class="token operator">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 100px<span class="token punctuation">;</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> right<span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token operator">-</span>200px<span class="token punctuation">;</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自适应布局" tabindex="-1"><a class="header-anchor" href="#自适应布局" aria-hidden="true">#</a> 自适应布局</h2><p>思路：</p><ul><li>左侧浮动或者绝对定位，然后右侧 margin 撑开</li><li>使用 &lt;div&gt; 包含，然后靠负 margin 形成 bfc</li><li>使用 flex</li></ul><h2 id="水平居中的方法" tabindex="-1"><a class="header-anchor" href="#水平居中的方法" aria-hidden="true">#</a> 水平居中的方法</h2><ul><li>元素为行内元素，设置父元素 text-align:center</li><li>如果元素宽度固定，可以设置左右 margin 为 auto ;</li><li>如果元素为绝对定位，设置父元素 position 为 relative ，元素设 left:0;right:0;margin:auto;</li><li>使用 flex-box 布局，指定 justify-content 属性为 center</li><li>display 设置为 tabel-ceil</li></ul><h2 id="垂直居中的方法" tabindex="-1"><a class="header-anchor" href="#垂直居中的方法" aria-hidden="true">#</a> 垂直居中的方法</h2><ul><li>将显示方式设置为表格， display:table-cell ,同时设置 vertial-align：middle</li><li>使用 flex 布局，设置为 align-item：center</li><li>绝对定位中设置 bottom:0,top:0 ,并设置 margin:auto</li><li>绝对定位中固定高度时设置 top:50%，margin-top 值为高度一半的负值</li><li>文本垂直居中设置 line-height 为 height 值</li></ul><h2 id="两种以上方式实现已知或者未知宽度的垂直水平居中" tabindex="-1"><a class="header-anchor" href="#两种以上方式实现已知或者未知宽度的垂直水平居中" aria-hidden="true">#</a> 两种以上方式实现已知或者未知宽度的垂直水平居中</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">// 1
.wraper</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> -50px 0 0 -50px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token selector">// 2
.wraper</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token selector">// 3
.wraper</span> <span class="token punctuation">{</span>
  <span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token selector">// 4
.wraper</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
  <span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>
    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="左边宽度固定-右边自适应" tabindex="-1"><a class="header-anchor" href="#左边宽度固定-右边自适应" aria-hidden="true">#</a> 左边宽度固定，右边自适应</h2><p>html 结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>固定宽度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自适应宽度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在外层 div （类名为 outer ）的 div 中，有两个子 div ，类名分别为 left 和 right ，其中 left 为固定宽度，而 right 为自适应宽度</p></blockquote><p><strong>方法 1：左侧 div 设置成浮动：float: left，右侧 div 宽度会自拉升适应</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.outer</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.left</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.right</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方法 2：对右侧:div 进行绝对定位，然后再设置 right=0，即可以实现宽度自适应</strong></p><blockquote><p>绝对定位元素的第一个高级特性就是其具有自动伸缩的功能，当我们将 width 设置为 auto 的时候（或者不设置，默认为 auto ），绝对定位元素会根据其 left 和 right 自动伸缩其大小</p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.outer</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.left</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.right</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方法 3：将左侧 div 进行绝对定位，然后右侧 div 设置 margin-left: 200px</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.outer</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.left</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.right</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方法 4：使用 flex 布局</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.outer</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.left</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.right</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="左边定宽-右边自适应方案-float-margin-float-calc" tabindex="-1"><a class="header-anchor" href="#左边定宽-右边自适应方案-float-margin-float-calc" aria-hidden="true">#</a> 左边定宽，右边自适应方案：float + margin，float + calc</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 方案1 */</span>
<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 120px<span class="token punctuation">;</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> 120px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 方案2 */</span>
<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 120px<span class="token punctuation">;</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">%</span> <span class="token operator">-</span> 120px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="左右两边定宽-中间自适应-float-float-calc-圣杯布局-设置-bfc-margin-负值法-flex" tabindex="-1"><a class="header-anchor" href="#左右两边定宽-中间自适应-float-float-calc-圣杯布局-设置-bfc-margin-负值法-flex" aria-hidden="true">#</a> 左右两边定宽，中间自适应：float，float + calc, 圣杯布局（设置 BFC，margin 负值法），flex</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span>wrap <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> 200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>wrap <span class="token operator">&gt;</span> div <span class="token punctuation">{</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 方案1 */</span>
<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 120px<span class="token punctuation">;</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> right<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 120px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>center <span class="token punctuation">{</span>
  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> 120px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 方案2 */</span>
<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 120px<span class="token punctuation">;</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
  <span class="token literal-property property">float</span><span class="token operator">:</span> right<span class="token punctuation">;</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 120px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>center <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">%</span> <span class="token operator">-</span> 240px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  margin<span class="token operator">-</span>left<span class="token operator">:</span> 120px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 方案3 */</span>
<span class="token punctuation">.</span>wrap <span class="token punctuation">{</span>
  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 120px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> 120px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>center <span class="token punctuation">{</span>
  <span class="token literal-property property">flex</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何实现小于-12px-的字体效果" tabindex="-1"><a class="header-anchor" href="#如何实现小于-12px-的字体效果" aria-hidden="true">#</a> 如何实现小于 12px 的字体效果</h2><p>transform:scale() 这个属性只可以缩放可以定义宽高的元素，而行内元素是没有宽高的，我们可以加上一个 display:inline-block ; transform: scale(0.7);</p><h2 id="offsetwidth-offsetheight-clientwidth-clientheight-与-scrollwidth-scrollheight-的区别" tabindex="-1"><a class="header-anchor" href="#offsetwidth-offsetheight-clientwidth-clientheight-与-scrollwidth-scrollheight-的区别" aria-hidden="true">#</a> offsetWidth/offsetHeight,clientWidth/clientHeight 与 scrollWidth/scrollHeight 的区别</h2><ul><li>offsetWidth/offsetHeight 返回值包含 content + padding + border，效果与 e.getBoundingClientRect()相同</li><li>clientWidth/clientHeight 返回值只包含 content + padding，如果有滚动条，也不包含滚动条</li><li>scrollWidth/scrollHeight 返回值包含 content + padding + 溢出内容的尺寸</li></ul><h2 id="常见兼容性问题" tabindex="-1"><a class="header-anchor" href="#常见兼容性问题" aria-hidden="true">#</a> 常见兼容性问题？</h2><ul><li>png24 位的图片在 iE6 浏览器上出现背景，解决方案是做成 PNG8</li><li>浏览器默认的 margin 和 padding 不同。解决方案是加一个全局的 *{margin:0;padding:0;} 来统一，但是全局效率很低，一般是如下这样解决：<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>body<span class="token punctuation">,</span>ul<span class="token punctuation">,</span>li<span class="token punctuation">,</span>ol<span class="token punctuation">,</span>dl<span class="token punctuation">,</span>dt<span class="token punctuation">,</span>dd<span class="token punctuation">,</span>form<span class="token punctuation">,</span>input<span class="token punctuation">,</span>h1<span class="token punctuation">,</span>h2<span class="token punctuation">,</span>h3<span class="token punctuation">,</span>h4<span class="token punctuation">,</span>h5<span class="token punctuation">,</span>h6<span class="token punctuation">,</span>p<span class="token punctuation">{</span>
  <span class="token literal-property property">margin</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token literal-property property">padding</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>IE 下, event 对象有 x , y 属性,但是没有 pageX , pageY 属性</li><li>Firefox 下, event 对象有 pageX , pageY 属性,但是没有 x,y 属性</li></ul><h2 id="现在要你完成一个-dialog-组件-说说你设计的思路-它应该有什么功能" tabindex="-1"><a class="header-anchor" href="#现在要你完成一个-dialog-组件-说说你设计的思路-它应该有什么功能" aria-hidden="true">#</a> 现在要你完成一个 Dialog 组件，说说你设计的思路？它应该有什么功能？</h2><ul><li>该组件需要提供 hook 指定渲染位置，默认渲染在 body 下面。</li><li>然后改组件可以指定外层样式，如宽度等</li><li>组件外层还需要一层 mask 来遮住底层内容，点击 mask 可以执行传进来的 onCancel 函数关闭 Dialog 。</li><li>另外组件是可控的，需要外层传入 visible 表示是否可见。</li><li>然后 Dialog 可能需要自定义头 head 和底部 footer ，默认有头部和底部，底部有一个确认按钮和取消按钮，确认按钮会执行外部传进来的 onOk 事件，然后取消按钮会执行外部传进来的 onCancel 事件。</li><li>当组件的 visible 为 true 时候，设置 body 的 overflow 为 hidden ，隐藏 body 的滚动条，反之显示滚动条。</li><li>组件高度可能大于页面高度，组件内部需要滚动条。</li><li>只有组件的 visible 有变化且为 ture 时候，才重渲染组件内的所有内容</li></ul><h2 id="盒模型-content-元素内容-padding-内边距-border-边框-margin-外边距" tabindex="-1"><a class="header-anchor" href="#盒模型-content-元素内容-padding-内边距-border-边框-margin-外边距" aria-hidden="true">#</a> 盒模型：content（元素内容） + padding（内边距） + border（边框） + margin（外边距）</h2><p>延伸： box-sizing</p><ul><li>content-box ：默认值，总宽度 = margin + border + padding + width</li><li>border-box ：盒子宽度包含 padding 和 border ， 总宽度 = margin + width</li><li>inherit ：从父元素继承 box-sizing 属性</li></ul><h2 id="介绍一下标准的-css-的盒子模型-低版本-ie-的盒子模型有什么不同的" tabindex="-1"><a class="header-anchor" href="#介绍一下标准的-css-的盒子模型-低版本-ie-的盒子模型有什么不同的" aria-hidden="true">#</a> 介绍一下标准的 CSS 的盒子模型？低版本 IE 的盒子模型有什么不同的</h2><ul><li>有两种， IE 盒子模型、 W3C 盒子模型；</li><li>盒模型： 内容(content)、填充( padding )、边界( margin )、 边框( border )；</li><li>区 别： IE 的 content 部分把 border 和 padding 计算了进去;</li></ul><h2 id="如何创建块级格式化上下文-block-formatting-context-bfc-有什么用" tabindex="-1"><a class="header-anchor" href="#如何创建块级格式化上下文-block-formatting-context-bfc-有什么用" aria-hidden="true">#</a> 如何创建块级格式化上下文(block formatting context)，BFC 有什么用</h2><ul><li>创建规则： <ul><li>根元素</li><li>浮动元素（ float 不取值为 none ）</li><li>绝对定位元素（ position 取值为 absolute 或 fixed ）</li><li>display 取值为 inline-block 、 table-cell 、 table-caption 、 flex 、 inline-flex 之一的元素</li><li>overflow 不取值为 visible 的元素</li></ul></li><li>作用： <ul><li>可以包含浮动元素</li><li>不被浮动元素覆盖</li><li>阻止父子元素的 margin 折叠</li></ul></li></ul><h2 id="对-bfc-规范的理解" tabindex="-1"><a class="header-anchor" href="#对-bfc-规范的理解" aria-hidden="true">#</a> 对 BFC 规范的理解？</h2><p>它决定了元素如何对其内容进行定位,以及与其他元素的关系和相互作用</p><p>定位方案：</p><ol><li>内部的 Box 会在垂直方向上一个接一个放置。</li><li>Box 垂直方向的距离由 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</li><li>每个元素的 margin box 的左边，与包含块 border box 的左边相接触。</li><li>BFC 的区域不会与 float box 重叠。</li><li>BFC 是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。</li><li>计算 BFC 的高度时，浮动元素也会参与计算。</li></ol><h2 id="bfc、ifc、gfc、ffc-fc-formatting-contexts-格式化上-下文" tabindex="-1"><a class="header-anchor" href="#bfc、ifc、gfc、ffc-fc-formatting-contexts-格式化上-下文" aria-hidden="true">#</a> BFC、IFC、GFC、FFC：FC（Formatting Contexts），格式化上 下文</h2><blockquote><p>BFC ：块级格式化上下文，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此(按照这个理念来想，只要脱离文档流，肯定就能产生 BFC )。产生 BFC 方式如下</p></blockquote><ul><li>float 的值不为 none 。</li><li>overflow 的值不为 visible 。</li><li>position 的值不为 relative 和 static 。</li><li>display 的值为 table-cell , table-caption , inline-block 中的任何一个</li></ul><p>用处？</p><ul><li>常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行</li></ul><blockquote><p>IFC ：内联格式化上下文， IFC 的 line box （线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的 padding/margin 影响)。</p></blockquote><blockquote><p>IFC 中的 line box 一般左右都贴紧整个 IFC ，但是会因为 float 元素而扰乱。 float 元素会位于 IFC 与 line box 之间，使得 line box 宽度缩短。 同个 ifc 下的多个 line box 高度会不同。 IFC 中时不可能有块级元素的，当插入块级元素时（如 p 中插入 div ）会产生两个匿名块与 div 分隔开，即产生两个 IFC ，每个 IFC 对外表现为块级元素，与 div 垂直排列。</p></blockquote><p>用处？</p><ul><li>水平居中：当一个块要在环境中水平居中时，设置其为 inline-block 则会在外层产生 IFC ，通过 text-align 则可以使其水平居中。</li><li>垂直居中：创建一个 IFC ，用其中一个元素撑开父元素的高度，然后设置其 vertical-align : middle ，其他行内元素则可以在此父元素下垂直居中</li></ul><blockquote><ul><li>GFC：网格布局格式化上下文（ display: grid ）</li><li>FFC：自适应格式化上下文（ display: flex ）</li></ul></blockquote>`,171);function b(m,h){const s=c("ExternalLinkIcon");return e(),l("div",null,[u,i(" more "),n("p",null,[n("a",d,[a("50 道 CSS 基础面试题（附答案）"),t(s)])]),n("p",null,[n("a",k,[a("《50 道 CSS 基础面试题（附答案）》中的答案真的就只是答案吗？"),t(s)])]),v])}const y=p(r,[["render",b],["__file","css篇.html.vue"]]);export{y as default};
